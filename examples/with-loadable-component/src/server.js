import path from 'path';
import App from './App';
import React from 'react';
import express from 'express';
import { renderToString } from 'react-dom/server';
import { ChunkExtractor } from '@loadable/server';

const assets = require(process.env.RAZZLE_ASSETS_MANIFEST);

const server = express();

server
  .disable('x-powered-by')
  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))
  .get('/*', async (req, res) => {
    // Render the app
    const app = <App />;

    // This is the stats file generated by webpack loadable plugin
    const statsFile = path.resolve('./build/loadable-stats.json')
    // We create an extractor from the statsFile
    const extractor = new ChunkExtractor({ statsFile, entrypoints: ['client']});
    // Wrap your application using "collectChunks"
    const jsx = extractor.collectChunks(<app />);
    // Render your application
    const markup = renderToString(jsx);
    // You can now collect your script tags
    const scriptTags = extractor.getScriptTags({crossorigin: true}); // or extractor.getScriptElements();
    // You can also collect your "preload/prefetch" links
    const linkTags = extractor.getLinkTags({crossorigin: true}); // or extractor.getLinkElements();
    // And you can even collect your style tags (if you use "mini-css-extract-plugin")
    const styleTags = extractor.getStyleTags({crossorigin: true}); // or extractor.getStyleElements();

    res.send(
      // prettier-ignore
      `<!doctype html>
<html lang="">
  <head>
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
      <meta charSet='utf-8' />
      <title>Welcome to Razzle</title>
      <meta name="viewport" content="width=device-width, initial-scale=1">
      ${linkTags} 
      ${styleTags}
  </head>
  <body>
      <div id="root">${markup}</div>
      ${scriptTags}
  </body>
</html>`
    );
  });

export default server;
